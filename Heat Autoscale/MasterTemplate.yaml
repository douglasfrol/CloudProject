heat_template_version: 2014-10-16

description: Template for creating a master VM

# Declare various parameters
parameters:

  image:
    type: string
    label: Image name or ID
    description: Image to be used for worker VM (Ubuntu 16.04 LTS - Xenial Xerus)
    default: 76589a23-bc75-4dae-93e3-a15e08a3b7c5

  flavor:
    type: string
    label: Flavor 
    description: Type of VM (i.e. flavor) to use
    default: ssc.small

  key:
    type: string
    label: Key name
    description: Name of key-pair to be used for compute instance
    default: Group12_Key

  public_network:
    type: string
    label: Public network name or ID
    description: Public network with floating IP addresses (Public External IPv4)
    default: Public External IPv4 Network

  private_network: 
    type: string
    label: Private network
    description: Group 12 Internal Network
    #default: Group 12 Internal Network
    default: SNIC 2017/13-45 Internal IPv4 Network

# Resource allocation
resources:

  cluster_sg:
    type: OS::Neutron::SecurityGroup
    properties:
      name: cluster_sg
      rules:
        - protocol: icmp
        - protocol: tcp
          port_range_min: 22
          port_range_max: 22

  #private_network:
  #  type: OS::Neutron::Net

  #private_subnet:
  #  type: OS::Neutron::Subnet
  #  properties:
  #    network_id: { get_resource: private_network }
  #    cidr: 10.10.10.0/24
  #    dns_nameservers:
  #      - 130.238.164.6
  #      - 130.238.4.133
  #      - 130.238.7.10
  #      - 130.239.1.90
  #      - 129.16.1.53

  #router:
  #  type: OS::Neutron::Router
  #  properties:
  #    external_gateway_info:
  #      network: { get_param: public_network }

  #router-interface:
  #  type: OS::Neutron::RouterInterface
  #  properties:
  #    router_id: { get_resource: router }
  #    subnet: { get_resource: private_subnet }

  port:
    type: OS::Neutron::Port
    properties:
      network: { get_param: private_network }
      security_groups:
        - { get_resource: cluster_sg }

  #volume:
  #  type: OS::Cinder::Volume
  #  properties:
  #    size: 5

  server:
    type: OS::Nova::Server
    properties:
      name: Master
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_param: key }
      #security_groups:
      #  - { get_resource: cluster_sg }
      networks:
        - port: { get_resource: port }
      #block_device_mapping:
      #  - device_name: vda
      #    delete_on_termination: true
      #    volume_id: { get_resource: volume }
      user_data: |
        #!/bin/sh
        echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDXbJoFEUvJM8tANur7/qzvgSs9M7KfPJZ2eOfaEVmHkInP8J/AvorEPz7sL1MFqln6acWOwT4OMW+yiYX9LarMwR5lMuJ/8Pz6Sxn8+CamrhH70d5mfiY2iUhSyVmtznule+37h7NTx9u+BpWB2S1J0tnJvbvsVXm8ZFY+s3ky90SjIWci85ISzanSUyg2PF7NV2qyQyBoPW52ATSZqT9VUqlgjLm1K7cdAoOUH+ObARvnDjfAWSU4gxuN2ucx5YUEXfFOUhnWhHmVcCYhGHyeyOtsqLWNen/JLlBR9slTyagCZ37EWS73tmSHOmbsqzIpFXtu0PvoQcHOd1E+F73n" >> /home/ubuntu/.ssh/authorized_keys
      user_data_format: RAW

  floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: public_network }

  floating_ip_assoc:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_resource: floating_ip }
      port_id: { get_resource: port }


outputs:
  instance_name:
    description: Name of the instance
    value: { get_attr: [server, name] }
  instance_ip:
    description: IP address of the instance
    value: { get_attr: [server, first_address, floating_ip, floating_ip_address] }
